<template>
  <div class="courseLearning">
    <!-- :reqId="reqId" -->
    <HeaderTitle :title="title" :titleFlag="titleFlag" :titleVideoFlag="titleVideoFlag"></HeaderTitle>
    <div style="overflow:auto;margin-top: 0.32rem;">
      <div class="courseLearningCon">
        <!-- 视频 -->
        <div v-for="(itemVideo,indexVideo) in videoUrl" :key="indexVideo">
          <!--    @ended="endedEvent()" -->
          <div class="videoDiv" v-if="indexVideo==electiveActive">
            <video
              :src="itemVideo.sd_src"
              width="100%"
              height="100%"
              playsinline
              :autoplay="autoplay"
              allowfullscreen="true"
              webkitallowfullscreen="true"
              mozallowfullscreen="true"
              controlslist="nodownload"
              controls
              @ended="endedEvent()"
              @canplay="canplayEvent()"
              id="video"
            ></video>
          </div>
        </div>
        <!-- 没有视频时显示 -->
        <div class="noVideo" v-if="this.videoUrl.length==0?true:false"></div>
        <div class="sectionDiv">{{section}}</div>
        <div class="sectionDetails" v-if="this.videoUrl.length==0?false:true">
          <div class="sectionDetailsHeader">共{{classHourTotal}}个课时</div>
          <!-- 选择课时 -->
          <div class="choose" ref="wrapper">
            <div :style="{width:scrollStyle }" ref="containerWidth">
              <span
                class="chooseChildren"
                v-for="(item,index) in chooseList"
                :key="index"
                @click="tab(item,index)"
                :class="{'active':electiveActive==index}"
              >
                <div class="chooseVideo" :class="{'activeVideo':electiveActive==index}">视频</div>
                <div class="chooseText">{{item}}</div>
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
// import BScroll from "better-scroll";   courseId
import { showVideo, introduceTeacher } from "../../api/video.js";
export default {
  name: "app",
  components: {},
  watch: {},
  props: {},
  data() {
    return {
      titleVideoFlag: true,
      title: "课程学习",
      titleFlag: true,
      section: "", //章节内容
      classHourTotal: "", //共多少课时
      electiveActive: 0,
      chooseList: [], //存放章节
      videoUrl: [], //存放视频连接
      scrollStyle: 9.73 + "rem",
      autoplay: true, //控制是否自动播放视频
      andoridCanplay: 0, //canplay事件默认值
      locationtime: "",
      CurrentTime: 0,
      CheckTime: 0
    };
  },
  computed: {},
  methods: {
    //   选择课时
    tab(item, index) {
      this.electiveActive = index;
      this.section = item;
    },
    // 获取视频
    getShowVideo() {
      var _this = this;
      var _videoID = localStorage.getItem("videoData");
      var courseinfo = {
        coursetype: 3
      };
      // 获取课程信息
      introduceTeacher(
        _this.$title,
        _videoID,
        courseinfo.coursetype,
        _this.$token
      ).then(resI => {
        var lessoninfo = resI.resultValue;
        var lesson_location = lessoninfo.app_lesson_location;
        // var iscdn = lessoninfo.iscdn;  //---------------------------------------------------
        var locationChapterIdx = 0,
          locationtime = 0;
        if (lesson_location && lesson_location.indexOf(",") != -1) {
          locationtime = lesson_location.split(",")[0];
          locationChapterIdx = lesson_location.split(",")[1];
        }
        this.locationtime = locationtime;
        console.log(
          "locationtime :" +
            this.locationtime +
            ",locationChapterIdx:" +
            locationChapterIdx
        );
        // 获取视频
        showVideo(_this.$title, _videoID, _this.$token).then(res => {
          var data = res.resultValue;
          data.map((item, idx) => {
            // 课程视频信息
            var _url = this.$videoUrl;
            var _token = _this.$token;
            var chapter = {};
            // 如果课程信息中的iscnd==1，说明需要使用cdn外链
            // if (iscdn == 1) _url = _this.$videoUrlCdn; //-------------------------------------------
            chapter.sd_src = _url + item.chapterSdPath;
            chapter.hd_src = _url + item.chapterHdPath + "?token=" + _token;
            chapter.fhd_src = _url + item.chapterFhdPath + "?token=" + _token;
            chapter.type = "视频";
            if (courseinfo.coursetype == 3 && idx == 0) {
              chapter.isLocation = true;
              chapter.locationTime = locationtime;
            }
            if (idx == locationChapterIdx) {
              chapter.isLocation = true;
              chapter.locationTime = locationtime;
            }
            this.chooseList.push(item.chapterName);
            this.videoUrl.push(chapter);
          });
          // 章节 视频赋值
          this.classHourTotal = this.chooseList.length;
          // 如果数据为空显示标题
          if (data.length == 0) {
            this.section = this.$route.query.value.courseName;
          } else {
            this.section = data[0].chapterName;
          }
        });
      });
    },
    //判断当前视频是否是最后一个，否的话继续播放
    endedEvent() {
      if (this.electiveActive < this.videoUrl.length) {
        ++this.electiveActive;
        this.autoplay = true;
        console.log(this.electiveActive, this.videoUrl.length);
      }
      if (this.electiveActive == this.videoUrl.length) {
        this.electiveActive = 0;
        this.autoplay = false;
      }
    },
    // 视频已准备好开始播放事件
    canplayEvent() {
      if (this.andoridCanplay != 0) return;
      this.andoridCanplay = 1;
      console.log(this.locationTime);
      if (this.locationTime) {
        document.getElementById("video").currentTime = this.locationTime;
        console.log(this.locationTime);
      } else {
        document.getElementById("video").currentTime = 0;
        console.log(
          `视频播放,起始位置：${document.getElementById("video").currentTime})}`
        );
      }
    }
  },
  created() {
    this.getShowVideo();
  },
  mounted() {
    setInterval(function() {
      //if playing
      var player = document.getElementById("video");
      if (player && !player.paused && !player.ended) {
        if (this.CurrentTime != player.currentTime) {
          this.CurrentTime = player.currentTime;
          this.CheckTime = 0;
        } else {
          this.CheckTime++;
        }
        // if pending over 8 seconds ,maybe 卡顿
        if (this.CheckTime > 6) {
          console.log("retry for vedio");
          var src = player.currentSrc;
          if (src == null || src == "") return;
          player.src = "";
          player.src = src;
          player.currentTime = this.CurrentTime;
          this.CheckTime = 0;
          player.play();
        }
      }
    }, 1000);
  }
};
</script>
<style lang='scss' type='text/css' scoped>
@import "../../style/courseLearning/courseLearning.scss";
</style>